process {
    withName: nanoplot {
        publishDir = [
            path: { "${params.outdir}/QC/${meta.id}${meta.region ? "/" + meta.region  : '' }/nanoplot"},
            mode: 'copy',
            enabled: true
        ]
        ext.args = "--tsv_stats"
    }

    withName: NANOPLOT_SINGLE {
        publishDir = [
            path: { "${params.outdir}/QC/${meta.id}${meta.region ? "/" + meta.region  : '' }/nanoplot" },
            mode: 'copy',
            enabled: true
        ]
    }

    withName: plotQualityProfile {
        publishDir = [
            path: { "${params.outdir}/QC/${meta.id}${meta.region ? "/" + meta.region  : '' }/qualityProfile" },
            mode: 'copy',
            enabled: true
        ]
    }

    withName: CUTADAPT_REORIENT_READS {
        publishDir = [
            [
                path: { "${params.outdir}/cutadapt/${meta.id}" },
                mode: 'copy',
                pattern: '*.fastq.gz',
                enabled: true
            ],
            publishDir = [
                path: { "${params.outdir}/logs/cutadapt/${meta.id}" },
                mode: 'copy',
                pattern: '*.log',
                enabled: true
            ]
        ]
    }

    withName: CHOPPER {
        publishDir = [
            [
                path: { "${params.outdir}/chopper/${meta.region ? meta.region + '/' : '' }${meta.id}" },
                mode: 'copy',
                pattern: '*.fastq.gz',
                enabled: true
            ],
            [
                path: { "${params.outdir}/logs/chopper/${meta.region ? meta.region + '/' : '' }${meta.id}" },
                mode: 'copy',
                pattern: '*.log',
                enabled: true
            ]
        ]
    }

    withName: PORECHOP_PORECHOP {
        publishDir = [
            path: { "${params.outdir}/porechop/${meta.id}" },
            mode: 'copy',
            enabled: true
        ]
        ext.prefix = "chopped"
    }

    withName: VSEARCH_DEREPLICATE {
        publishDir = [
            [
                path: { "${params.outdir}/vsearch-derep/${meta.region ? meta.region + '/' : '' }${meta.id}" },
                mode: 'copy',
                pattern: '*.{fastq.gz,uc}',
                enabled: true
            ],
            [
                path: { "${params.outdir}/logs/vsearch-derep/${meta.region ? meta.region + '/' : '' }${meta.id}" },
                mode: 'copy',
                pattern: '*.log',
                enabled: true
            ]
        ]
    }

    withName: ITSXPRESS {
        publishDir = [
            [
                path: { "${params.outdir}/itsxpress/${region}/${meta.id}" },
                mode: 'copy',
                pattern: '*.fastq.gz',
                enabled: true
            ],
            [
                path: { "${params.outdir}/logs/itsxpress/${region}/${meta.id}" },
                mode: 'copy',
                pattern: '*.log',
                enabled: true
            ]
        ]
    }

    withName: ITSX {
        publishDir = [
            [
                path: { "${params.outdir}/itsx/LSU/${meta.id}" },
                mode: 'copy',
                pattern: '*.{gz,positions.txt}',
                enabled: true
            ],
            [
                path: { "${params.outdir}/logs/itsx/LSU/${meta.id}" },
                mode: 'copy',
                pattern: '*.{summary.txt,problematic.txt}',
                enabled: true
            ]
        ]
    }

    withName: RecoverRegionsFromFastq {
        publishDir = [
            path: { "${params.outdir}/itsx-fastq/LSU/${meta.id}" },
            mode: 'copy',
            enabled: true
        ]
    }

    withName: VSEARCH_CLUSTER {
        publishDir = [
            [
                path: { "${params.outdir}/vsearch-cluster/${meta.region ? meta.region + '/' : '' }${meta.id}" },
                mode: 'copy',
                pattern: '*.gz',
                enabled: true
            ],
            [
                path: { "${params.outdir}/logs/vsearch-cluster/${meta.region ? meta.region + '/' : '' }${meta.id}" },
                mode: 'copy',
                pattern: '*.log',
                enabled: true
            ]
        ]
        //ext.args = "--id 0.98 --log vsearch.log --relabel OTU_ --relabel_keep --fasta_width 0 --strand plus --sizein --qmask none --clusterout_sort"
        ext.args = "--id 0.97 --log vsearch.log  --fasta_width 0 --strand plus --sizein --qmask none --clusterout_sort"
        //--relabel_keep 
        ext.args2 = "--cluster_size"
        ext.args3 = "--centroids --otutabout --uc"
    }

    withName: VSEARCH_MAP_READS_TO_OTUS {
        publishDir = [
            [
                path: { "${params.outdir}/vsearch-otu-map/${meta.region ? meta.region + '/' : '' }${meta.id}" },
                mode: 'copy',
                pattern: '*.{tsv,uc}',
                enabled: true
            ],
            [
                path: { "${params.outdir}/logs/vsearch-otu-map/${meta.region ? meta.region + '/' : '' }${meta.id}" },
                mode: 'copy',
                pattern: '*.log',
                enabled: true
            ]
        ]
    }

    withName: VSEARCH_SINTAX {
        publishDir = [
            path: { "${params.outdir}/vsearch-sintax/${meta.region ? meta.region + '/' : '' }${meta.id}" },
            mode: 'copy',
            enabled: true
        ]
    }

    withName: CreatePhyloseqObject {
        publishDir = [
            path: { "${params.outdir}/phyloseq/${meta.region ? meta.region + '/' : '' }${meta.id}/${params.classifier}" },
            mode: 'copy',
            enabled: true
        ]
    }

    withName: ExportQiimeData {
        publishDir = [
            path: { "${params.outdir}/qiime-export/${meta.region ? meta.region + '/' : '' }${meta.id}" },
            mode: 'copy',
            enabled: true
        ]
    }

    withName: VSEARCH_UCHIME_DENOVO {
        publishDir = [
            [
                path: { "${params.outdir}/vsearch-uchime-denovo/${meta.region ? meta.region + '/' : '' }${meta.id}" },
                mode: 'copy',
                pattern: '*.fasta',
                enabled: true
            ],
            [
                path: { "${params.outdir}/logs/vsearch-uchime-denovo/${meta.region ? meta.region + '/' : '' }${meta.id}" },
                mode: 'copy',
                pattern: '*.log',
                enabled: true
            ]
        ]
        ext.prefix = "denovo"
    }

    withName: VSEARCH_UCHIME_REF {
        publishDir = [
            [
                path: { "${params.outdir}/vsearch-uchime-ref/${meta.region ? meta.region + '/' : '' }${meta.id}" },
                mode: 'copy',
                pattern: '*.fasta',
                enabled: true
            ],
            [
                path: { "${params.outdir}/logs/vsearch-uchime-ref/${meta.region ? meta.region + '/' : '' }${meta.id}" },
                mode: 'copy',
                pattern: '*.log',
                enabled: true
            ]
        ]
        ext.prefix = "ref-unite"
    }

    withName: SEQKIT_REMOVE_CHIMERAS {
        publishDir = [
            path: { "${params.outdir}/seqkit-remove-chimeras/${meta.id}" },
            mode: 'copy',
            enabled: false
        ]
    }

    withName: ClassifyConsensusBlast {
        publishDir = [
            path: { "${params.outdir}/blast/${meta.region ? meta.region + '/' : '' }${meta.id}" },
            mode: 'copy',
            enabled: true
        ]
    }

    withName: ClassifyReadsRDP {
        publishDir = [
            path: { "${params.outdir}/rdp/${meta.region ? meta.region + '/' : '' }${meta.id}" },
            mode: 'copy',
            enabled: true
        ]
    }

    withName: ClassifyReadsDada2 {
        publishDir = [
            path: { "${params.outdir}/rdp-dada2/${meta.region ? meta.region + '/' : '' }${meta.id}" },
            mode: 'copy',
            enabled: true
        ]
    }
    withName: ImportTaxonomyIntoPhyloseq {
        publishDir = [
            path: { "${params.outdir}/rdp-dada2-phyloseq/${meta.region ? meta.region + '/' : '' }${meta.id}" },
            mode: 'copy',
            enabled: true
        ]
    }
    withName: ImportQiime2TaxonomyIntoPhyloseq {
        publishDir = [
            path: { "${params.outdir}/qiime2-phyloseq/${meta.region ? meta.region + '/' : '' }${meta.id}" },
            mode: 'copy',
            enabled: true
        ]
    }
    withName: TweakTaxTableForSpeedytax {
        publishDir = [
            path: { "${params.outdir}/speedytax/${meta.region ? meta.region + '/' : '' }${meta.id}" },
            mode: 'copy',
            enabled: true
        ]
    }
}