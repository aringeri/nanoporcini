#!/usr/bin/env python

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import hdbscan

umap_out = pd.read_csv("$umap_tsv", delimiter="\t")

X = umap_out.loc[:, ["D1", "D2"]]

min_cluster_size = max(2, int(len(umap_out)*$min_cluster_prop))
umap_out["bin_id"] = hdbscan.HDBSCAN(
    min_cluster_size=min_cluster_size,
    cluster_selection_epsilon=int($cluster_sel_epsilon)
    ).fit_predict(X)

#PLOT
plt.figure(figsize=(20,20))
plt.scatter(umap_out.loc[:, "D1"], umap_out.loc[:, "D2"], c=umap_out["bin_id"], cmap='Spectral', s=1)
plt.xlabel("UMAP1", fontsize=18)
plt.ylabel("UMAP2", fontsize=18)
plt.gca().set_aspect('equal', 'datalim')
plt.title("Projecting " + str(len(umap_out['bin_id'])) + " reads. " + str(len(umap_out['bin_id'].unique())) + " clusters generated by HDBSCAN", fontsize=18)

for cluster in np.sort(umap_out['bin_id'].unique()):
    read = umap_out.loc[umap_out['bin_id'] == cluster].iloc[0]
    plt.annotate(str(cluster), (read['D1'], read['D2']), weight='bold', size=14)

plt.savefig(f'hdbscan.output-{min_cluster_size}.png')
umap_out.loc[:, ["read", "bin_id"]].to_csv(f"hdbscan.output-{min_cluster_size}.tsv", sep="\t", index=False)