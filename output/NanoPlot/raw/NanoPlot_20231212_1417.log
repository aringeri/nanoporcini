2023-12-12 14:17:13,468 NanoPlot 1.24.0 started with arguments Namespace(N50=False, alength=False, bam=None, barcoded=False, color='#4CB391', colormap='Greens', cram=None, downsample=None, dpi=100, drop_outliers=False, fasta=None, fastq=['data/fq/raw/20221214.CT.Sample1.BC89.fq.gz', 'data/fq/raw/20221214.CT.Sample2.BC90.fq.gz', 'data/fq/raw/20221214.CT.Sample3.BC91.fq.gz', 'data/fq/raw/20221214.CT.Sample4.BC92.fq.gz', 'data/fq/raw/20221214.CT.Sample5.BC93.fq.gz', 'data/fq/raw/20221214.CT.Sample6.BC94.fq.gz', 'data/fq/raw/20221214.CT.Sample7.BC95.fq.gz', 'data/fq/raw/20221214.CT.Sample8.BC96.fq.gz'], fastq_minimal=None, fastq_rich=None, font_scale=1, format='png', listcolormaps=False, listcolors=False, loglength=False, maxlength=None, minlength=None, minqual=None, no_N50=False, outdir='output/NanoPlot/raw/', percentqual=False, pickle=None, plots=['kde', 'dot'], prefix='', raw=False, readtype='1D', runtime_until=None, store=False, summary=None, threads=4, title=None, ubam=None, verbose=False)
2023-12-12 14:17:13,468 Python version is: 3.6.7 | packaged by conda-forge | (default, Jul  2 2019, 02:18:42)  [GCC 7.3.0]
2023-12-12 14:17:13,470 Nanoplotter: valid output format png
2023-12-12 14:17:13,489 Nanoget: Starting to collect statistics from plain fastq file.
2023-12-12 14:17:13,489 Nanoget: Decompressing gzipped fastq data/fq/raw/20221214.CT.Sample1.BC89.fq.gz
2023-12-12 14:17:13,489 Nanoget: Starting to collect statistics from plain fastq file.
2023-12-12 14:17:13,489 Nanoget: Starting to collect statistics from plain fastq file.
2023-12-12 14:17:13,489 Nanoget: Decompressing gzipped fastq data/fq/raw/20221214.CT.Sample2.BC90.fq.gz
2023-12-12 14:17:13,489 Nanoget: Starting to collect statistics from plain fastq file.
2023-12-12 14:17:13,489 Nanoget: Decompressing gzipped fastq data/fq/raw/20221214.CT.Sample4.BC92.fq.gz
2023-12-12 14:17:13,489 Nanoget: Decompressing gzipped fastq data/fq/raw/20221214.CT.Sample3.BC91.fq.gz
2023-12-12 14:17:28,846 Reduced DataFrame memory usage from 1.7701263427734375Mb to 1.180084228515625Mb
2023-12-12 14:17:28,849 Nanoget: Starting to collect statistics from plain fastq file.
2023-12-12 14:17:28,849 Nanoget: Decompressing gzipped fastq data/fq/raw/20221214.CT.Sample5.BC93.fq.gz
2023-12-12 14:17:34,753 Reduced DataFrame memory usage from 2.25787353515625Mb to 1.3170928955078125Mb
2023-12-12 14:17:34,756 Nanoget: Starting to collect statistics from plain fastq file.
2023-12-12 14:17:34,756 Nanoget: Decompressing gzipped fastq data/fq/raw/20221214.CT.Sample6.BC94.fq.gz
2023-12-12 14:17:35,707 Reduced DataFrame memory usage from 2.4518280029296875Mb to 1.634552001953125Mb
2023-12-12 14:17:35,710 Nanoget: Starting to collect statistics from plain fastq file.
2023-12-12 14:17:35,710 Nanoget: Decompressing gzipped fastq data/fq/raw/20221214.CT.Sample7.BC95.fq.gz
2023-12-12 14:17:40,595 Reduced DataFrame memory usage from 2.9715499877929688Mb to 1.9810333251953125Mb
2023-12-12 14:17:40,598 Nanoget: Starting to collect statistics from plain fastq file.
2023-12-12 14:17:40,598 Nanoget: Decompressing gzipped fastq data/fq/raw/20221214.CT.Sample8.BC96.fq.gz
2023-12-12 14:17:50,569 Reduced DataFrame memory usage from 2.3471145629882812Mb to 1.5647430419921875Mb
2023-12-12 14:17:52,763 Reduced DataFrame memory usage from 1.9729843139648438Mb to 1.1509075164794922Mb
2023-12-12 14:17:58,456 Reduced DataFrame memory usage from 2.3754043579101562Mb to 1.3856525421142578Mb
2023-12-12 14:18:05,369 Reduced DataFrame memory usage from 2.6630172729492188Mb to 1.553426742553711Mb
2023-12-12 14:18:05,393 Nanoget: Gathered all metrics of 821817 reads
2023-12-12 14:18:05,842 Calculated statistics
2023-12-12 14:18:05,843 Using sequenced read lengths for plotting.
2023-12-12 14:18:05,867 Removed 3 artefactual reads with very short length and very high quality.
2023-12-12 14:18:06,279 Calculated statistics
2023-12-12 14:18:06,280 Nanoplotter: Valid color #4CB391.
2023-12-12 14:18:06,280 Nanoplotter: Valid colormap Greens.
2023-12-12 14:18:06,298 Nanoplotter: Creating length plots for Read length.
2023-12-12 14:18:06,301 Nanoplotter: Using 821814 reads maximum of 115155bp.
2023-12-12 14:18:17,597 Created length plots
2023-12-12 14:18:17,630 Nanoplotter: Creating Read lengths vs Average read quality plots using statistics from 821814 reads.
2023-12-12 14:18:29,060 Created LengthvsQual plot
2023-12-12 14:18:29,060 Writing html report.
2023-12-12 14:18:44,703 Finished!
